// Code generated by goctl. DO NOT EDIT.
// Source: file.proto

package fileservice

import (
	"context"

	"go-go-zero/service/file/cmd/rpc/types"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CmdtyPicsReq  = __.CmdtyPicsReq
	CmdtyPicsResp = __.CmdtyPicsResp
	Pic           = __.Pic

	FileService interface {
		GetCmdtyPicsByOrder(ctx context.Context, in *CmdtyPicsReq, opts ...grpc.CallOption) (*CmdtyPicsResp, error)
	}

	defaultFileService struct {
		cli zrpc.Client
	}
)

func NewFileService(cli zrpc.Client) FileService {
	return &defaultFileService{
		cli: cli,
	}
}

func (m *defaultFileService) GetCmdtyPicsByOrder(ctx context.Context, in *CmdtyPicsReq, opts ...grpc.CallOption) (*CmdtyPicsResp, error) {
	client := __.NewFileServiceClient(m.cli.Conn())
	return client.GetCmdtyPicsByOrder(ctx, in, opts...)
}
