// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	dorm "go-go-zero/service/user/cmd/api/internal/handler/dorm"
	follow "go-go-zero/service/user/cmd/api/internal/handler/follow"
	uinfo "go-go-zero/service/user/cmd/api/internal/handler/uinfo"
	"go-go-zero/service/user/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: loginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: registerHandler(serverCtx),
			},
		},
		rest.WithPrefix("/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:id",
				Handler: uinfo.GetByIdHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/",
				Handler: uinfo.UpdateByIdHandler(serverCtx),
			},
		},
		rest.WithPrefix("/user/info"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:id",
				Handler: follow.FollowHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/:id",
				Handler: follow.UnfollowHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/list/:id",
				Handler: follow.ListByIdHandler(serverCtx),
			},
		},
		rest.WithPrefix("/user/follow"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/",
				Handler: dorm.ListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/user/dorm"),
	)
}
