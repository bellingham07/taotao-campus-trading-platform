syntax = "v1"

@server(
	group: trade
	prefix: /trade
	middleware: JwtAuth
)
service trade-api {
	@handler getByIdAndStatus
	get / (IdStatusReq) returns ()
	
	@handler listByRole
	delete / (RoleReq) returns ()
	
	@handler beginTrade
	post / (TradeReq) returns ()
	
	@handler confirm
	put /:id/:stage (IdStatusReq) returns ()
	
	@handler cancel
	put /:id (IdReq) returns ()
}

@server(
	group: cmt
	prefix: /trade/cmt
	middleware: JwtAuth
)
service trade-api {
	@handler cmt
	post / (CmtReq) returns ()
	
	@handler listByToUserId
	get /:userId (UserIdReq) returns ()
	
	@handler listByTradeId
	get /:tradeId (TradeIdReq) returns ()
}

type (
	IdReq {
		Id int64 `json:"id" path:"id" form:"id"`
	}

	IdStatusReq {
		Id     int64 `json:"id" path:"id" form:"id"`
		Status int8  `json:"status" path:"status" form:"status"`
	}

	TradeIdReq {
		TradeId int64 `json:"tradeId" path:"tradeId"`
	}

	UserIdReq {
		UserId int64 `form:"userId"`
	}

	IdDoneReq {
		Id   int64 `form:"id"`
		Done int   `form:"done"`
	}

	RoleReq {
		Role int `path:"role"`
	}

	CmtReq {
		TradeId  int64  `json:"tradeId"`
		UserId   int64  `json:"userId"`
		Name     string `json:"name"`
		ToUserId int64  `json:"toUserId"`
		Type     int    `json:"type"`
		Content  string `json:"content"`
	}

	TradeReq {
		OwnerId int64   `json:"ownerId"`
		Owner   string  `json:"owner"`
		OtherId int64   `json:"otherId"`
		Other   string  `json:"other"`
		CmdtyId int64   `json:"cmdtyId"`
		Payment float64 `json:"payment"`
		Type    int8    `json:"type"`
	}
)