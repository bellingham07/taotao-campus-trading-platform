// Code generated by goctl. DO NOT EDIT.
// Source: cmdty.proto

package cmdtyservice

import (
	"context"

	"go-go-zero/service/cmdty/cmd/rpc/types"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CodeResp = __.CodeResp
	CoverReq = __.CoverReq

	CmdtyService interface {
		UpdateCover(ctx context.Context, in *CoverReq, opts ...grpc.CallOption) (*CodeResp, error)
	}

	defaultCmdtyService struct {
		cli zrpc.Client
	}
)

func NewCmdtyService(cli zrpc.Client) CmdtyService {
	return &defaultCmdtyService{
		cli: cli,
	}
}

func (m *defaultCmdtyService) UpdateCover(ctx context.Context, in *CoverReq, opts ...grpc.CallOption) (*CodeResp, error) {
	client := __.NewCmdtyServiceClient(m.cli.Conn())
	return client.UpdateCover(ctx, in, opts...)
}
